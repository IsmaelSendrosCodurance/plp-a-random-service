name: "PLP deployment"

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-3
  ECR_REPOSITORY: isendros-plp
  ECS_CLUSTER: isendros-plp
  ECS_SERVICE: isendros-plp-ecs-service
  ECS_TASK_DEFINITION: isendros-plp-ecr-task-definition

jobs:
  build-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-pf-aws-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{secrets.AWS_ECR_REGISTRY}}
          ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
          IMAGE_TAG: a-random-service-latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
  deploy:
    name: Blue/Green deployment
    runs-on: ubuntu-latest
    environment: dev
    needs: [build-push]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup AWS CRedentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.6"
      - name: Terraform Init
        run: terraform init -auto-approve
      - name: Terraform Apply desired_count 2
        run: terraform apply -auto-approve -var="desired_count=2"
      - name: Sleep for 60 seconds
        run: sleep 60s
        shell: bash
      - name: Stop Oldest Task
        working-directory: ./scripts
        run: ./kill_oldest_task.sh
      - name: Terraform Apply desired_count 1
        run: terraform apply -auto-approve -var="desired_count=1"